name: build

on:
  push:
    paths-ignore:
      - "docs/**"
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Start up databases via Docker Compose 
        run: |
            docker-compose up -d postgres
            docker ps -a

      - name: Build post-service
        run: mvn clean install --file post-service/pom.xml
      
      - name: Build rxjava2
        run: mvn clean install --file rxjava2/pom.xml
      
      - name: Build kotlin
        run: mvn clean install --file kotlin/pom.xml
     
      - name: Build kotlin-co
        run: mvn clean install --file kotlin-co/pom.xml
  automerge:
    name: Merge pull request
    runs-on: ubuntu-latest
    needs: [build]
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false && (
        github.event.action == 'opened' ||
        github.event.action == 'reopened' ||
        github.event.action == 'synchronize'
      ) && (
        github.actor == 'dependabot[bot]'
      )
    steps:
      - name: Merge
        uses: actions/github-script@v4.0.2
        with:
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
          github-token: ${{github.token}}
